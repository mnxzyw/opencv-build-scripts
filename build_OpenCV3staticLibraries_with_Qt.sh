BUILD_FOLDER=/tmp
OPENCV_TAG=3.1.0
QT_PREFIX_PATH=/opt/Qt/5.5/gcc_64
OPENCV_INSTALL_FOLDER=/usr/local

# If you build on KS Pool machine, you have to set the modules to load in "KS_MODULE_ENV" variable
# KS_MODULE_ENV="module load gcc; module load eigen; module load ffmpeg"

cd $BUILD_FOLDER
CVCON_BUILD_FOLDER="opencv_contrib"
test -e "${CVCON_BUILD_FOLDER}" || git clone https://github.com/Itseez/opencv_contrib.git
cd ${CVCON_BUILD_FOLDER}
git checkout tags/${OPENCV_TAG}
OPENCV_EXTRA_MODULES_PATH=${PWD}/modules/

cd $BUILD_FOLDER
CV_BUILD_FOLDER="opencv"
test -e ${CV_BUILD_FOLDER} || git clone https://github.com/Itseez/opencv.git ${CV_BUILD_FOLDER}
cd ${CV_BUILD_FOLDER}
git checkout tags/${OPENCV_TAG}
test -e build || mkdir build; cd build

EIGEN_INCLUDE_PATH="-D EIGEN_INCLUDE_PATH=$(pkg-config --cflags-only-I eigen3 | sed "s#-I##g")"

# Handle Qt as display manager
QT_BUILD_STRING=""
test -z ${QT_PREFIX_PATH} || QT_BUILD_STRING="-D CMAKE_PREFIX_PATH=${QT_PREFIX_PATH} -D WITH_QT=ON"

echo "$EIGEN_INCLUDE_PATH"

CMAKE_CALL="cmake \
${EIGEN_INCLUDE_PATH} \
-D CMAKE_INSTALL_PREFIX=${OPENCV_INSTALL_FOLDER} \
${QT_BUILD_STRING} \
-D OPENCV_EXTRA_MODULES_PATH=${OPENCV_EXTRA_MODULES_PATH} \
-D CMAKE_BUILD_TYPE=RELEASE \
\
-D WITH_1394=OFF \
-D WITH_AVFOUNDATION=OFF \
-D WITH_CARBON=OFF \
-D WITH_VTK=OFF \
-D WITH_CUDA=OFF \
-D WITH_CUFFT=OFF \
-D WITH_CUBLAS=OFF \
-D WITH_NVCUVID=OFF \
-D WITH_EIGEN=ON \
-D WITH_VFW=OFF \
 D WITH_FFMPEG=ON \
-D WITH_GSTREAMER=OFF \
-D WITH_GSTREAMER_0_10=OFF \
$(: -D WITH_GTK=OFF) \
$(: -D WITH_GTK_2_X=OFF) \
-D WITH_IPP=OFF \
-D WITH_JASPER=ON \
-D WITH_JPEG=ON \
-D WITH_WEBP=ON \
-D WITH_OPENEXR=OFF \
-D WITH_OPENGL=ON \
-D WITH_OPENNI=OFF \
-D WITH_OPENNI2=OFF \
-D WITH_PNG=ON \
-D WITH_PVAPI=OFF \
-D WITH_GIGEAPI=OFF \
-D WITH_WIN32UI=OFF \
-D WITH_QUICKTIME=OFF \
-D WITH_TBB=OFF \
-D WITH_OPENMP=OFF \
-D WITH_CSTRIPES=OFF \
-D WITH_PTHREADS_PF=OFF \
-D WITH_TIFF=ON \
-D WITH_UNICAP=OFF \
-D WITH_V4L=OFF \
-D WITH_LIBV4L=OFF \
-D WITH_DSHOW=OFF \
-D WITH_MSMF=OFF \
-D WITH_XIMEA=OFF \
-D WITH_XINE=OFF \
-D WITH_CLP=OFF \
-D WITH_OPENCL=OFF \
-D WITH_OPENCL_SVM=OFF \
-D WITH_OPENCLAMDFFT=OFF \
-D WITH_OPENCLAMDBLAS=OFF \
-D WITH_DIRECTX=OFF \
-D WITH_INTELPERC=OFF \
-D WITH_IPP_A=OFF \
-D WITH_MATLAB=OFF \
-D WITH_VA=OFF \
-D WITH_VA_INTEL=OFF \
-D WITH_GDAL=OFF \
-D WITH_GPHOTO2=OFF \
\
-D BUILD_SHARED_LIBS=OFF \
-D BUILD_opencv_apps=OFF \
-D BUILD_ANDROID_EXAMPLES=OFF \
-D BUILD_DOCS=OFF \
-D BUILD_EXAMPLES=OFF \
-D BUILD_PACKAGE=OFF \
-D BUILD_PERF_TESTS=OFF \
-D BUILD_TESTS=OFF \
-D BUILD_WITH_DEBUG_INFO=OFF \
-D BUILD_WITH_STATIC_CRT=ON \
-D BUILD_WITH_DYNAMIC_IPP=OFF \
-D BUILD_FAT_JAVA_LIB=OFF \
-D BUILD_ANDROID_SERVICE=OFF \
-D BUILD_CUDA_STUBS=OFF \
\
-D BUILD_ZLIB=ON \
-D BUILD_TIFF=ON \
-D BUILD_JASPER=ON \
-D BUILD_JPEG=ON \
-D BUILD_PNG=ON \
-D BUILD_OPENEXR=OFF \
-D BUILD_TBB=OFF \
\
-D INSTALL_CREATE_DISTRIB=OFF \
-D INSTALL_C_EXAMPLES=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D INSTALL_ANDROID_EXAMPLES=OFF \
$(: -D INSTALL_TO_MANGLED_PATHS=OFF) \
-D INSTALL_TESTS=OFF \
\
$(: -D ENABLE_PRECOMPILED_HEADERS=ON \
-D ENABLE_SOLUTION_FOLDERS=OFF \
-D ENABLE_PROFILING=OFF \
-D ENABLE_COVERAGE=OFF \
-D ENABLE_OMIT_FRAME_POINTER=OFF \
-D ENABLE_POWERPC=OFF \
-D ENABLE_FAST_MATH=ON \
-D ENABLE_SSE=ON \
-D ENABLE_SSE2=ON \
-D ENABLE_SSE3=ON \
-D ENABLE_SSSE3=ON \
-D ENABLE_SSE41=ON \
-D ENABLE_SSE42=ON \
-D ENABLE_POPCNT=ON \
-D ENABLE_AVX=ON \
-D ENABLE_AVX2=ON \
-D ENABLE_FMA3=OFF \
-D ENABLE_NEON=OFF \
-D ENABLE_VFPV3=OFF \
-D ENABLE_NOISY_WARNINGS=OFF \
-D OPENCV_WARNINGS_ARE_ERRORS=OFF \
-D ANDROID_EXAMPLES_WITH_LIBS=OFF \
-D ENABLE_IMPL_COLLECTION=OFF \
-D GENERATE_ABI_DESCRIPTOR=OFF) \
\
-D DOWNLOAD_EXTERNAL_TEST_DATA=OFF \
.."

echo "Calling cmake:\n\
${CMAKE_CALL}"
eval "${CMAKE_CALL}"

echo "You may now build with e.g.: make -j2"